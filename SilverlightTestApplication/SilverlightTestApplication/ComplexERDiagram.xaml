<UserControl x:Class="SilverlightTestApplication.ComplexERDiagram" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:go="http://schemas.nwoods.com/GoXam"
    xmlns:grid="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Data"              
    xmlns:local="clr-namespace:SilverlightTestApplication">
    <UserControl.Resources>
        <DataTemplate x:Key="NodeTemplate">           
            <Border Background="Gray" BorderBrush="Gray" BorderThickness="2" CornerRadius="3" 
              go:Part.SelectionAdorned="True" go:Part.Resizable="True"
              go:Node.FromSpot="AllSides" go:Node.ToSpot="AllSides"
              go:Node.Location="{Binding Path=Data.Location, Mode=TwoWay}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" HorizontalAlignment="Center" Text="{Binding Path=Data.Key}" FontWeight="Bold" />
                        <Button Grid.Column="1" Content="*"  />
                    </Grid>
                    <grid:DataGrid Grid.Row="1" AutoGenerateColumns="False" Background="White" HorizontalAlignment="Stretch"
                         ItemsSource="{Binding Path=Data.Items}">
                        <grid:DataGrid.Columns>
                            <grid:DataGridTemplateColumn>
                                <grid:DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <go:NodePanel>
                                            <go:NodeShape go:NodePanel.Figure="{Binding Path=Figure}"
                            Width="10" Height="10"
                            Fill="{Binding Path=Color}"
                            Stroke="Black" StrokeThickness="1" />
                                        </go:NodePanel>
                                    </DataTemplate>
                                </grid:DataGridTemplateColumn.CellTemplate>
                            </grid:DataGridTemplateColumn>
                            <grid:DataGridTextColumn Header="Name" Binding="{Binding Path=Name}" />
                        </grid:DataGrid.Columns>
                    </grid:DataGrid>
                </Grid>
            </Border>            
        </DataTemplate>

        <DataTemplate x:Key="LinkTemplate">
            <go:LinkPanel go:Part.SelectionElementName="Shape" go:Part.SelectionAdorned="True" go:Part.Reshapable="True" go:Part.Deletable="False">
                <go:Link.Route>
                    <go:Route Routing="Orthogonal" Curve="JumpOver" />
                </go:Link.Route>
                <Path Stroke="Black" go:LinkPanel.ToArrow="OpenTriangle" />
                <go:LinkShape x:Name="Shape" Stroke="Black" StrokeThickness="1.5" />
                <TextBlock Text="{Binding Path=Data.Text}" go:LinkPanel.Index="0" go:LinkPanel.Offset="NaN NaN" go:LinkPanel.Orientation="Upright" />
                <TextBlock Text="{Binding Path=Data.ToText}" go:LinkPanel.Index="-1" go:LinkPanel.Offset="NaN NaN" go:LinkPanel.Orientation="Upright" />
            </go:LinkPanel>
        </DataTemplate>
       
        <go:BooleanStringConverter x:Key="theButtonConverter" TrueString="-" FalseString="+" />

        <DataTemplate x:Key="GroupTemplate">
            <Border CornerRadius="5" BorderThickness="1" Background="Transparent"
              BorderBrush="{Binding Path=Data.Color}"
              go:Part.SelectionAdorned="True"
              go:Node.LocationElementName="myGroupPanel"
              go:Group.IsSubGraphExpanded="False">
                <StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                        <Button x:Name="myCollapseExpandButton" Click="CollapseExpandButton_Click"
                Content="{Binding Path=Group.IsExpandedSubGraph, Converter={StaticResource theButtonConverter}}"
                Width="20" Margin="0 0 5 0" />
                        <TextBlock Text="{Binding Path=Data.Key}" FontWeight="Bold" />
                    </StackPanel>
                    <go:GroupPanel x:Name="myGroupPanel" Padding="5" >
                        <!--<grid:DataGrid  AutoGenerateColumns="False" Background="White" HorizontalAlignment="Stretch"  
                         ItemsSource="{Binding Path=Data.Items}">
                            <grid:DataGrid.Columns>
                                <grid:DataGridTemplateColumn>
                                    <grid:DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <go:NodePanel>
                                                <go:NodeShape go:NodePanel.Figure="{Binding Path=Figure}"
                            Width="10" Height="10"
                            Fill="{Binding Path=Color}"
                            Stroke="Black" StrokeThickness="1" />
                                            </go:NodePanel>
                                        </DataTemplate>
                                    </grid:DataGridTemplateColumn.CellTemplate>
                                </grid:DataGridTemplateColumn>
                                <grid:DataGridTextColumn Header="Name" Binding="{Binding Path=Name}" />
                            </grid:DataGrid.Columns>
                        </grid:DataGrid>-->
                    </go:GroupPanel>
                </StackPanel>
                <go:Group.Layout>
                    <go:LayeredDigraphLayout Direction="90" Conditions="Standard GroupSizeChanged" />
                </go:Group.Layout>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="SimplifiedNodeTemplate">
            <Border Background="Gray" BorderBrush="Gray" BorderThickness="1"
              go:Part.SelectionAdorned="True"
              go:Node.FromSpot="AllSides" go:Node.ToSpot="AllSides"
              go:Node.Location="{Binding Path=Data.Location, Mode=TwoWay}">
                <TextBlock HorizontalAlignment="Center"
                   Text="{Binding Path=Data.Key}" FontWeight="Bold" />
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="SimplifiedLinkTemplate">
            <go:LinkShape x:Name="Shape"
            Stroke="Black" StrokeThickness="1.5"
            go:Part.SelectionAdorned="True" go:Part.Deletable="False">
                <go:Link.Route>
                    <go:Route Routing="Orthogonal" />
                </go:Link.Route>
            </go:LinkShape>
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="5*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5*"/>
        </Grid.ColumnDefinitions>
        <go:Diagram x:Name="myDiagram" Grid.Row="0" Grid.Column="1"
                BorderBrush="Black" BorderThickness="1"
                Background="AntiqueWhite"
                InitialStretch="Uniform"  Padding="5"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                NodeTemplate="{StaticResource NodeTemplate}"
                LinkTemplate="{StaticResource LinkTemplate}"
                GroupTemplate="{StaticResource GroupTemplate}"
                MaximumSelectionCount="1"
               
                CenteredNodeData="{Binding ElementName=myDiagram, Path=SelectedNode.Data}">
           <go:Diagram.Layout>
                <!-- only do a layout once, when everything is initialized -->
                <!--<go:ForceDirectedLayout Conditions="InitialOnly" />-->
                <go:ForceDirectedLayout Conditions="Standard GroupSizeChanged" />
            </go:Diagram.Layout>

            <!-- in-place print preview: a GridPattern showing where page breaks might be -->
            <go:Node Id="PrintGrid">
                <Grid go:Part.LayerName="Background" go:Part.Selectable="False"
              go:Part.LayoutId="None" go:Node.Avoidable="False"
              go:Part.InDiagramBounds="False" go:Part.Printable="False"
              go:Node.LocationElementName="GridPattern"
              go:Part.Visible="False">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <!-- the print grid -->
                    <Border BorderBrush="Black" BorderThickness="1" Background="White">
                        <go:GridPattern Grid.Row="0" Grid.Column="0" x:Name="GridPattern">
                            <Path Stroke="Purple" StrokeThickness="2" go:GridPattern.Figure="HorizontalLine" />
                            <Path Stroke="Purple" StrokeThickness="2" go:GridPattern.Figure="VerticalLine" />
                        </go:GridPattern>
                    </Border>
                    <!-- shadows -->
                    <Polygon Grid.Row="0" Grid.Column="1" Fill="Gray"
                   Points="0 0 20 20 0 20" VerticalAlignment="Top" />
                    <Rectangle Grid.Row="0" Grid.Column="1" Fill="Gray"
                     Width="20" Margin="0 20 0 0" />
                    <Polygon Grid.Row="1" Grid.Column="0" Fill="Gray"
                   Points="0 0 20 0 20 20" HorizontalAlignment="Left" />
                    <Rectangle Grid.Row="1" Grid.Column="0" Fill="Gray"
                     Height="20" Margin="20 0 0 0" />
                    <Rectangle Grid.Row="1" Grid.Column="1" Fill="Gray"
                     Width="20" Height="20" />
                </Grid>
            </go:Node>
            <!-- this node implements a mode-less form that can be dragged around
           and scrolls around to stay near the node it is detailing -->
            <!--<go:Node Id="myDetails">
                <local:EntityForm go:Part.LayerName="Tool" go:Part.Visible="False"
                          go:Part.Deletable="False" go:Part.Copyable="False"
                          go:Part.LayoutId="None" go:Part.Printable="False" />
            </go:Node>-->
        </go:Diagram>

        <StackPanel Grid.Row="0" Orientation="Vertical" Grid.Column="0" ScrollViewer.VerticalScrollBarVisibility="Auto" Height="Auto">
            <ScrollViewer  VerticalAlignment="Top" Height="500">
                <ListBox x:Name="myListBox" SelectionMode="Multiple" DisplayMemberPath="Key2" SelectedValuePath="Key1"  Width="Auto" VerticalAlignment="Top" 
                         ItemsSource="{Binding}" SelectionChanged="myListBox_SelectionChanged"  Margin="10,5,10,10" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
            </ScrollViewer>         
        </StackPanel>
        <!-- display all of the nodes in this list; keep the selection in sync -->
        <StackPanel Grid.Row="1" Orientation="Horizontal" Grid.Column="1">
            <TextBlock Text="Update:" FontWeight="Bold" />          
         
            <StackPanel x:Name="printPanel">
              
                <TextBlock Text="Updating data will recreate all structure" />
              
                <Button Margin="5 5 5 5" Content="Update" Click="UpdateData_Click"  />
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
